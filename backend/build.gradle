plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.7'
    id 'io.spring.dependency-management' version '1.1.4'
    // id 'org.flywaydb.flyway' version '9.22.3' // Disabled - using Liquibase
    id 'org.liquibase.gradle' version '2.2.1'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
}

// Apply performance testing configuration
apply from: 'gradle/performance-testing.gradle'

group = 'com.smmpanel'
version = '1.0.0'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-logging', module: 'commons-logging-api'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
    }
}

repositories {
    mavenCentral()
    maven { 
        url = uri('https://repo.spring.io/milestone')
        name = 'SpringMilestone'
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Environment variables from .env file
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
    
    // Retry and Circuit Breaker
    implementation 'org.springframework.retry:spring-retry'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.1.0'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    
    // Redis - Using Lettuce client (better performance, non-blocking I/O)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Jedis removed - using Lettuce instead for better performance
    // implementation 'redis.clients:jedis' 
    implementation 'org.apache.commons:commons-pool2' // Still needed for connection pooling
    
    // Rate limiting
    implementation 'com.bucket4j:bucket4j-core:8.8.0'
    implementation 'com.bucket4j:bucket4j-redis:8.8.0'
    implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'
    
    // Database
    implementation 'org.postgresql:postgresql'
    // Keep hibernate-types-60 but it's compatible with Hibernate 6.x series
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.liquibase:liquibase-core'
    
    // Liquibase runtime dependencies
    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'ch.qos.logback:logback-classic'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    // Removed redundant spring-data-jpa (already included via spring-boot-starter-data-jpa)
    
    // Hibernate Second Level Cache (EhCache) - compatible with Spring Boot 3.1.7
    implementation 'org.hibernate.orm:hibernate-jcache'
    implementation 'org.ehcache:ehcache:3.10.8'
    
    // Jakarta EE APIs for Spring Boot 3.x compatibility
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    
    // JWT - FIXED VERSION
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // Removed redundant jakarta.mail (already included via starter-mail)
    
    // Removed redundant spring-security-core (already included via starter-security)
    
    // YouTube API
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20231011-2.0.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'
    
    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-support:4.15.0'
    
    // HTTP Client
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    // Updated for Hibernate 6.x compatibility
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // JAXB dependencies for Java 11+ (required for Ehcache XML configuration)
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.9'
    implementation 'javax.activation:activation:1.1.1'
    
    // LOMBOK - CRITICAL FIX FOR ANNOTATION PROCESSING
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Testing - add these lines
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:postgresql:1.19.3'
    testImplementation 'org.testcontainers:kafka:1.19.3'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.1'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.10.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'com.h2database:h2:2.2.224'
    
    // H2 for development/test profiles
    runtimeOnly 'com.h2database:h2:2.2.224'
}

// Configure annotation processing for Gradle 9.0 compatibility
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}

compileTestJava {
    options.annotationProcessorPath = configurations.testAnnotationProcessor
}

// Configure test task for Gradle 9.0 compatibility
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    finalizedBy jacocoTestReport
}

// Configure Jacoco for test coverage
jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    dependsOn test
}

// Configure Spotless for code formatting
spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/target/**'
        }
        googleJavaFormat('1.19.2').aosp().reflowLongStrings()
        formatAnnotations()
    }
}

springBoot {
    buildInfo()
}

// Disable plain JAR for Spring Boot
jar {
    enabled = false
    archiveClassifier = ''
}

// Flyway configuration removed - fully migrated to Liquibase

// Liquibase configuration
liquibase {
    activities {
        main {
            changelogFile 'db/changelog/db.changelog-master.xml'
            url project.findProperty('liquibase.url') ?: 'jdbc:postgresql://localhost:5432/smm_panel'
            username project.findProperty('liquibase.username') ?: 'smm_admin'
            password project.findProperty('liquibase.password') ?: 'postgres123'
            driver 'org.postgresql.Driver'
            defaultSchemaName 'public'
            contexts project.findProperty('liquibase.contexts') ?: 'dev'
            outputFile 'logs/liquibase-output.sql'
            searchPath 'src/main/resources'
        }
        
        baseline {
            changelogFile 'src/main/resources/db/changelog/db.changelog-baseline.xml'
            url project.findProperty('liquibase.url') ?: 'jdbc:postgresql://localhost:5432/smm_panel'
            username project.findProperty('liquibase.username') ?: 'smm_admin'
            password project.findProperty('liquibase.password') ?: 'postgres123'
            driver 'org.postgresql.Driver'
            defaultSchemaName 'public'
            contexts 'baseline'
            outputFile 'logs/liquibase-baseline-output.sql'
        }
        
        stage {
            changelogFile 'src/main/resources/db/liquibase/db.changelog-master.xml'
            url project.findProperty('liquibaseUrlStage') ?: 'jdbc:postgresql://localhost:5432/smm_panel_stage'
            username project.findProperty('liquibaseUsernameStage') ?: 'smm_admin'
            password project.findProperty('liquibasePasswordStage') ?: 'stage_password_123'
            driver 'org.postgresql.Driver'
            contexts 'stage,all'
            testRollbackOnUpdate true
            outputFile 'logs/liquibase-stage-output.sql'
        }
        
        prod {
            changelogFile 'src/main/resources/db/liquibase/db.changelog-master.xml'
            url project.findProperty('liquibaseUrlProd') ?: System.getenv('DB_URL')
            username project.findProperty('liquibaseUsernameProd') ?: System.getenv('DB_USER')
            password project.findProperty('liquibasePasswordProd') ?: System.getenv('DB_PASSWORD')
            driver 'org.postgresql.Driver'
            contexts 'prod,all'
            testRollbackOnUpdate false
            outputFile 'logs/liquibase-prod-output.sql'
        }
    }
    
    runList = project.findProperty('runList') ?: 'main'
}