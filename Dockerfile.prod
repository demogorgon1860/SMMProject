# Production Dockerfile (optimized)
FROM openjdk:17-jdk-slim

# Install required packages
RUN apt-get update && \
    apt-get install -y \
        curl \
        dumb-init && \
    rm -rf /var/lib/apt/lists/*

# Create application user
RUN groupadd -r smmapp && useradd -r -g smmapp smmapp

# Set working directory
WORKDIR /app

# Copy pre-built JAR (for production deployment)
COPY target/smm-panel-*.jar app.jar

# Create necessary directories
RUN mkdir -p /app/logs /app/config && \
    chown -R smmapp:smmapp /app

# Switch to application user
USER smmapp

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# Production JVM options
ENV JAVA_OPTS="-server \
               -Xms1g -Xmx2g \
               -XX:+UseG1GC \
               -XX:MaxGCPauseMillis=200 \
               -XX:+UseContainerSupport \
               -XX:MaxRAMPercentage=75.0 \
               -XX:+HeapDumpOnOutOfMemoryError \
               -XX:HeapDumpPath=/app/logs/ \
               -Djava.security.egd=file:/dev/./urandom \
               -Dspring.profiles.active=production"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
