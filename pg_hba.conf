# PostgreSQL Client Authentication Configuration File
# ====================================================
# 
# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.
#
# Security Best Practices Applied:
# - No trust authentication for any network connections
# - SCRAM-SHA-256 for all password authentication
# - Restricted network access (no 0.0.0.0/0)
# - Explicit reject rules for unauthorized access
#
# TYPE  DATABASE        USER            ADDRESS                 METHOD

# Database administrative login by Unix domain socket
# Use peer authentication for local postgres superuser
local   all             postgres                                peer

# Local connections for all users via Unix socket
# Require password authentication even for local connections
local   all             all                                     scram-sha-256

# IPv4 local connections
# Allow localhost connections with strong password authentication
host    all             all             127.0.0.1/32            scram-sha-256

# IPv6 local connections  
# Allow IPv6 localhost with strong password authentication
host    all             all             ::1/128                 scram-sha-256

# Docker network connections (bridge network default range)
# Only allow specific database and user from Docker network
host    smm_panel       smm_admin       172.16.0.0/12           scram-sha-256
host    smm_panel       smm_app         172.16.0.0/12           scram-sha-256

# Docker Compose custom network (if using custom network)
# Adjust this range based on your docker-compose network configuration
host    smm_panel       smm_admin       10.0.0.0/8              scram-sha-256
host    smm_panel       smm_app         10.0.0.0/8              scram-sha-256

# Kubernetes/Container orchestration networks (if applicable)
# Only enable if using Kubernetes
# host    smm_panel       smm_admin       10.244.0.0/16           scram-sha-256

# Replication connections (if using streaming replication)
# host    replication     replicator      172.16.0.0/12           scram-sha-256

# SSL/TLS connections for production (recommended)
# Require SSL for any non-local connections
# hostssl smm_panel       smm_admin       172.16.0.0/12           scram-sha-256

# Monitoring connections (for Prometheus postgres_exporter)
host    smm_panel       monitoring      172.16.0.0/12           scram-sha-256
host    smm_panel       monitoring      127.0.0.1/32            scram-sha-256

# Application-specific users with restricted access
# Read-only user for reporting
host    smm_panel       smm_readonly    172.16.0.0/12           scram-sha-256

# Backup user with specific permissions
host    smm_panel       smm_backup      127.0.0.1/32            scram-sha-256

# Development environment connections (NEVER use in production)
# Commented out by default for security
# host    smm_panel       smm_dev         192.168.0.0/16          scram-sha-256

# IMPORTANT: Reject all other connection attempts
# This must be the last rule to ensure no unauthorized access
host    all             all             0.0.0.0/0               reject
host    all             all             ::/0                    reject

# Security Notes:
# 1. Never use 'trust' authentication method for network connections
# 2. Always use SCRAM-SHA-256 instead of md5 for password authentication
# 3. Restrict connections to specific IP ranges
# 4. Use SSL/TLS for production environments (hostssl)
# 5. Regularly review and audit this configuration
# 6. Monitor failed authentication attempts in PostgreSQL logs
# 7. Consider using certificate authentication for high-security environments
# 8. Implement IP allowlisting at firewall level as additional security layer