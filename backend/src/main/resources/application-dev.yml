# ==========================================
# Development Profile Configuration
# ==========================================
# This file overrides values from application.yml for local development
# No environment variables required - all defaults provided

spring:
  # Database configuration with local defaults
  datasource:
    url: jdbc:postgresql://localhost:5432/smm_panel
    username: smm_admin
    password: ${DB_PASSWORD}  # From .env file
    hikari:
      maximum-pool-size: 20  # Reduced for dev
      minimum-idle: 5
  
  # Redis configuration for local development
  redis:
    host: localhost
    port: 6379
    password: ${REDIS_PASSWORD}  # From .env file
    timeout: 2000ms
    lettuce:
      pool:
        enabled: true
        max-active: 10
        max-idle: 8
        min-idle: 2
        max-wait: 2000ms
        time-between-eviction-runs: 60s
      shutdown-timeout: 100ms
  
  # Kafka configuration for local development
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: smm-panel-dev-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 50  # Reduced to prevent thread exhaustion
    producer:
      retries: 1  # Reduced for dev
      batch-size: 16384
    listener:
      concurrency: 3  # Limited concurrency to reduce thread count
  
  # Liquibase settings for development
  liquibase:
    enabled: true
    contexts: dev
    drop-first: false  # Never drop database
    change-log: classpath:db/changelog/db.changelog-master.xml
  
  # JPA/Hibernate settings for development
  jpa:
    hibernate:
      ddl-auto: none  # Disable schema validation to bypass errors
    show-sql: true  # Show SQL in console
    properties:
      hibernate:
        format_sql: true  # Format SQL for readability
        use_sql_comments: true
        generate_statistics: false  # Set to true for performance debugging
        default_batch_fetch_size: 20  # Prevent N+1 queries
        jdbc:
          batch_size: 25  # Batch inserts/updates
  
  # H2 Console (if needed for testing)
  h2:
    console:
      enabled: false  # We're using PostgreSQL
  
  # DevTools
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

# Application-specific configuration
app:
  # JWT settings for development
  jwt:
    secret: ${JWT_SECRET}  # From .env file
    expiration: 86400000  # 24 hours
    refresh-expiration: 604800000  # 7 days
  
  # CORS settings for local frontend
  cors:
    allowed-origins: 
      - http://localhost:3000
      - http://localhost:5173
      - http://localhost:8080
    allowed-methods: "*"
    allowed-headers: "*"
    allow-credentials: true
  
  # External services (use mock/sandbox versions)
  binom:
    api:
      url: ${BINOM_API_URL}  # From .env file
      key: ${BINOM_API_KEY}  # From .env file
      timeout: 30000
  
  cryptomus:
    enabled: ${CRYPTOMUS_ENABLED:true}  # From .env file
    api-url: ${CRYPTOMUS_API_URL}  # From .env file
    user-api-key: ${CRYPTOMUS_USER_API_KEY}  # From .env file (Simple User Account)
    payout-api-key: ${CRYPTOMUS_PAYOUT_API_KEY}  # From .env file (Payout operations)
    api-secret: ${CRYPTOMUS_API_SECRET:not-applicable}  # Not needed for simple user account
    merchant-id: ${CRYPTOMUS_MERCHANT_ID:not-applicable}  # Not needed for simple user account
    webhook-secret: ${CRYPTOMUS_WEBHOOK_SECRET:not-applicable}  # Not needed for simple user account
    sandbox: false  # Simple user accounts use production mode
  
  youtube:
    api-key: ${YOUTUBE_API_KEY}  # From .env file

# Security settings for development
security:
  require-ssl: false  # No SSL in local dev

# Management endpoints - all enabled for development
management:
  endpoints:
    web:
      exposure:
        include: "*"  # Expose all endpoints in dev
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    info:
      enabled: true
  metrics:
    enable:
      all: true  # Enable all metrics in dev
    distribution:
      percentiles-histogram:
        all: true  # Track all percentiles in dev
  health:
    redis:
      enabled: true
    db:
      enabled: true
    kafka:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# Logging configuration for development
logging:
  level:
    root: INFO
    com.smmpanel: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
    org.springframework.data.redis: DEBUG
    liquibase: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/smm-panel-dev.log
    max-size: 10MB
    max-history: 5

# Server configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param  # Include stacktrace with ?trace=true
    include-exception: true

# Development profile - all environment variables should be defined in .env file