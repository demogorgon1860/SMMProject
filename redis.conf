# Redis 7 Configuration File - Optimized for SMM Panel
# ======================================================
# This configuration provides:
# - Security hardening with ACL and authentication
# - Optimized persistence for cache + critical data
# - Performance tuning for web application workload
# - Docker-friendly settings
#
# Redis Version: 7.x
# Last Updated: 2025-08-17
# Environment: Production/Docker

# ======================================================
# NETWORK CONFIGURATION
# ======================================================

# Accept connections from any interface (required for Docker)
bind 0.0.0.0 ::

# Disable protected mode since we're using authentication
protected-mode no

# TCP listen() backlog
tcp-backlog 511

# Close the connection after client idle for N seconds
timeout 300

# TCP keepalive (detect dead peers)
tcp-keepalive 300

# Port to listen on
port 6379

# ======================================================
# GENERAL CONFIGURATION
# ======================================================

# Run as daemon (no for Docker)
daemonize no

# Server verbosity (debug, verbose, notice, warning)
loglevel notice

# Log file location (empty for stdout in Docker)
logfile ""

# Number of databases (0-15)
databases 16

# Show Redis logo in logs
always-show-logo no

# Process title
set-proc-title yes

# Template for process title
proc-title-template "{title} {listen-addr} {server-mode}"

# ======================================================
# SECURITY & AUTHENTICATION
# ======================================================

# IMPORTANT: Master password (will be overridden by Docker --requirepass)
# requirepass is set via command line for security

# ACL Configuration - User-based access control
# Default user (disabled for security)
user default on nopass ~* &* +@all

# Application user with limited permissions
user app-user on ~* &* -@dangerous +@read +@write +@list +@set +@string +@stream +@hash +@bitmap +@hyperloglog +@geo

# Read-only monitoring user
user monitoring on ~* &* -@all +ping +info +client +config|get +cluster|info +latency +memory +slowlog|get

# Admin user with full permissions (use strong password)
user admin on ~* &* +@all

# ACL log max length
acllog-max-len 128

# ACL external file (optional, for complex ACL rules)
# aclfile /etc/redis/users.acl

# ======================================================
# SNAPSHOTTING (RDB Persistence)
# ======================================================

# Save the dataset to disk
# Format: save <seconds> <changes>
# Will save after both conditions are met

# Save after 900 sec (15 min) if at least 1 key changed
save 900 1

# Save after 300 sec (5 min) if at least 10 keys changed
save 300 10

# Save after 60 sec if at least 10000 keys changed
save 60 10000

# Compress RDB dumps
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Remove RDB files used by replication when no longer needed
rdb-del-sync-files no

# Working directory for RDB and AOF files
dir /data

# ======================================================
# APPEND ONLY FILE (AOF Persistence)
# ======================================================

# Enable AOF for better durability
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF directory
appenddirname "appendonlydir"

# AOF fsync policy:
# - always: fsync after every write (slow, safest)
# - everysec: fsync every second (good compromise)
# - no: don't fsync, let OS handle it (fastest, risky)
appendfsync everysec

# Don't fsync during rewrites (better performance)
no-appendfsync-on-rewrite no

# Auto rewrite the AOF when it grows by this percentage
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file on startup
aof-load-truncated yes

# Use RDB-AOF hybrid persistence
aof-use-rdb-preamble yes

# AOF timestamp
aof-timestamp-enabled no

# ======================================================
# MEMORY MANAGEMENT
# ======================================================

# Max memory limit (set to 75% of container limit)
maxmemory 3gb

# Memory eviction policy
# - volatile-lru: remove LRU keys with expire set
# - allkeys-lru: remove any LRU key
# - volatile-lfu: remove LFU keys with expire set
# - allkeys-lfu: remove any LFU key
# - volatile-random: remove random key with expire set
# - allkeys-random: remove any random key
# - volatile-ttl: remove key with nearest expire time
# - noeviction: don't remove, return error
maxmemory-policy allkeys-lru

# LRU samples for eviction
maxmemory-samples 5

# Ignore hard memory limit for certain conditions
# maxmemory-eviction-tenacity 10

# ======================================================
# LAZY FREEING (Non-blocking deletion)
# ======================================================

lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes
lazyfree-lazy-user-del yes
lazyfree-lazy-user-flush yes

# ======================================================
# THREADED I/O
# ======================================================

# Number of I/O threads (Redis 6+)
# Set to number of CPU cores, max 8
io-threads 4

# Enable threaded reads
io-threads-do-reads yes

# ======================================================
# SLOW LOG
# ======================================================

# Log queries slower than specified microseconds
slowlog-log-slower-than 10000

# Maximum slow log length
slowlog-max-len 128

# ======================================================
# LATENCY MONITORING
# ======================================================

# Latency threshold in milliseconds
latency-monitor-threshold 100

# ======================================================
# EVENT NOTIFICATION
# ======================================================

# Keyspace notifications
# K: Keyspace events (prefix with __keyspace@<db>__)
# E: Keyevent events (prefix with __keyevent@<db>__)
# g: Generic commands (DEL, EXPIRE, RENAME, ...)
# $: String commands
# l: List commands
# s: Set commands
# h: Hash commands
# z: Sorted set commands
# t: Stream commands
# x: Expired events
# e: Evicted events
# n: New key events
notify-keyspace-events "Ex"

# ======================================================
# CLIENT OUTPUT BUFFER LIMITS
# ======================================================

# Format: client-output-buffer-limit <class> <hard> <soft> <seconds>
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# ======================================================
# FREQUENCY OF REHASHING
# ======================================================

# Active rehashing
activerehashing yes

# Hz (background task frequency)
hz 10

# Dynamic HZ
dynamic-hz yes

# ======================================================
# ADVANCED CONFIGURATION
# ======================================================

# Hash table settings
hash-max-listpack-entries 512
hash-max-listpack-value 64

# List settings
list-max-listpack-size -2
list-compress-depth 0

# Set settings
set-max-intset-entries 512

# Sorted set settings
zset-max-listpack-entries 128
zset-max-listpack-value 64

# HyperLogLog settings
hll-sparse-max-bytes 3000

# Streams settings
stream-node-max-bytes 4096
stream-node-max-entries 100

# Active rehashing
activerehashing yes

# Client query buffer limit
client-query-buffer-limit 1gb

# Protocol buffer limit
proto-max-bulk-len 512mb

# ======================================================
# DISABLE DANGEROUS COMMANDS
# ======================================================

# Rename dangerous commands (empty string to disable)
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command KEYS ""
rename-command CONFIG "CONFIG_bae443f1"
rename-command SHUTDOWN "SHUTDOWN_8f7c2b9d"
rename-command DEBUG ""

# ======================================================
# CACHE CONFIGURATION (Application Specific)
# ======================================================

# Enable tracking for client-side caching
tracking-table-max-keys 1000000

# ======================================================
# MODULES
# ======================================================

# Load modules at startup
# loadmodule /usr/lib/redis/modules/redisgears.so
# loadmodule /usr/lib/redis/modules/redisearch.so
# loadmodule /usr/lib/redis/modules/redistimeseries.so

# ======================================================
# DOCKER-SPECIFIC SETTINGS
# ======================================================

# Disable supervised mode (Docker handles process supervision)
supervised no

# Stop writes on RDB errors
stop-writes-on-bgsave-error yes

# ======================================================
# REPLICATION (Future Use)
# ======================================================

# Replica read-only mode
replica-read-only yes

# Replication diskless sync
repl-diskless-sync no

# Replication diskless sync delay
repl-diskless-sync-delay 5

# Replica priority for sentinel
replica-priority 100

# ======================================================
# PERFORMANCE TUNING NOTES
# ======================================================

# 1. This config assumes Redis 7 with 4GB RAM allocation
# 2. AOF + RDB hybrid persistence for durability
# 3. Optimized for web application caching workload
# 4. Security hardened with ACL and command renaming
# 5. Monitor with: redis-cli --stat
# 6. Check slow queries: redis-cli SLOWLOG GET
# 7. Memory analysis: redis-cli --bigkeys
# 8. Latency analysis: redis-cli --latency