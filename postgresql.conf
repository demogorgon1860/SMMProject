# PostgreSQL 15 Configuration File - Optimized for SMM Panel
# ===========================================================
# 
# This configuration is optimized for:
# - PostgreSQL 15 on Docker with 8GB RAM allocated
# - High-throughput web application workload
# - Enhanced security settings
# - Optimal performance for the SMM Panel application
#
# Last Updated: 2025-08-17
# Environment: Production/Docker

# ===========================================================
# CONNECTION AND AUTHENTICATION
# ===========================================================

# Connection Settings
listen_addresses = '*'                 # Listen on all interfaces (Docker requirement)
port = 5432                            # Standard PostgreSQL port
max_connections = 200                  # Maximum concurrent connections
superuser_reserved_connections = 5    # Reserved for superuser/maintenance

# Authentication
password_encryption = scram-sha-256    # Use strong password encryption
authentication_timeout = 1min          # Timeout for authentication
ssl = off                              # SSL handled by Docker networking
                                       # Enable in production with proper certs

# ===========================================================
# RESOURCE USAGE (MEMORY)
# ===========================================================

# Memory Settings (based on 8GB container limit)
shared_buffers = 2GB                   # 25% of total RAM
effective_cache_size = 6GB             # 75% of total RAM
maintenance_work_mem = 512MB           # For VACUUM, CREATE INDEX, etc.
work_mem = 10MB                        # Per operation (sort, hash)
                                       # work_mem * max_connections should not exceed RAM

# Huge Pages (Linux only, improves large memory performance)
huge_pages = try                       # Use huge pages if available

# ===========================================================
# RESOURCE USAGE (DISK)
# ===========================================================

# Temporary File Settings
temp_buffers = 16MB                    # For temporary tables
temp_file_limit = 10GB                 # Limit temp file space per session

# ===========================================================
# WRITE AHEAD LOG (WAL)
# ===========================================================

# WAL Settings for Performance and Durability
wal_level = replica                    # Support for streaming replication
fsync = on                             # Force data to disk (data safety)
synchronous_commit = on                # Wait for WAL write (can be 'off' for performance)
wal_sync_method = fdatasync            # Method for forcing WAL to disk
full_page_writes = on                  # Protect against partial page writes
wal_compression = on                   # Compress full page writes
wal_buffers = 16MB                     # WAL buffer size
wal_writer_delay = 200ms               # WAL writer process wake interval
checkpoint_timeout = 15min             # Maximum time between checkpoints
checkpoint_completion_target = 0.9     # Spread checkpoint I/O
max_wal_size = 4GB                     # Maximum WAL size before checkpoint
min_wal_size = 1GB                     # Minimum WAL size

# Archive Settings (for backup/recovery)
archive_mode = off                     # Enable for production backups
# archive_command = 'test ! -f /backup/%f && cp %p /backup/%f'

# ===========================================================
# QUERY TUNING
# ===========================================================

# Planner Cost Constants
random_page_cost = 1.1                 # SSD storage (lower than default 4.0)
effective_io_concurrency = 200         # Number of concurrent I/O operations
default_statistics_target = 100        # Default statistics collection

# Planner Settings
enable_partitionwise_join = on         # Enable partition-wise joins
enable_partitionwise_aggregate = on    # Enable partition-wise aggregation
enable_parallel_hash = on              # Enable parallel hash joins
enable_parallel_append = on            # Enable parallel append

# Parallel Query Execution
max_worker_processes = 8               # Maximum background processes
max_parallel_workers_per_gather = 4    # Workers per parallel query
max_parallel_workers = 8               # Total parallel workers
max_parallel_maintenance_workers = 4   # Workers for maintenance tasks
parallel_leader_participation = on     # Leader participates in parallel query

# JIT Compilation (PostgreSQL 11+)
jit = on                               # Enable JIT compilation
jit_above_cost = 100000               # JIT compile queries above this cost
jit_inline_above_cost = 500000        # Inline functions above this cost
jit_optimize_above_cost = 500000      # Optimize JIT code above this cost

# ===========================================================
# ERROR REPORTING AND LOGGING
# ===========================================================

# Where to Log
log_destination = 'stderr'             # Log to stderr (Docker logs)
logging_collector = off                # Docker handles log collection
log_directory = 'log'                  # If logging_collector = on
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0600                  # Secure log file permissions
log_rotation_age = 1d                  # Rotate daily
log_rotation_size = 100MB              # Rotate on size

# When to Log
log_min_messages = warning             # Minimum message level to log
log_min_error_statement = error        # Log statements causing errors
log_min_duration_statement = 1000      # Log slow queries (> 1 second)
log_checkpoints = on                   # Log checkpoint activity
log_connections = on                   # Log successful connections
log_disconnections = on                # Log disconnections
log_duration = off                     # Log all query durations (verbose)
log_error_verbosity = default          # Error message detail level
log_hostname = off                     # Don't resolve IP addresses
log_line_prefix = '%m [%p] %q%u@%d '  # Timestamp, PID, user, database
log_lock_waits = on                    # Log lock waits
log_statement = 'ddl'                  # Log DDL statements
log_replication_commands = on          # Log replication commands
log_temp_files = 0                     # Log all temp file usage
log_timezone = 'UTC'                   # Log timezone

# Performance Logging
log_autovacuum_min_duration = 1000     # Log autovacuum > 1 second
log_transaction_sample_rate = 0.01     # Sample 1% of transactions
track_io_timing = on                   # Track I/O timing
track_functions = all                  # Track function call counts
track_activity_query_size = 1024       # Track query text size

# ===========================================================
# STATISTICS
# ===========================================================

# Statistics Collection
track_activities = on                  # Track command execution
track_counts = on                      # Track table/index access
track_commit_timestamp = off           # Track transaction commit times
# stats_temp_directory removed in PostgreSQL 15

# Statistics Monitoring
shared_preload_libraries = 'pg_stat_statements'  # Load extensions
pg_stat_statements.max = 10000         # Maximum statements tracked
pg_stat_statements.track = all         # Track all statements
pg_stat_statements.track_utility = on  # Track utility commands
pg_stat_statements.save = on           # Save stats across restarts

# ===========================================================
# AUTOVACUUM
# ===========================================================

# Autovacuum Settings
autovacuum = on                        # Enable autovacuum
autovacuum_max_workers = 4             # Maximum autovacuum workers
autovacuum_naptime = 30s               # Time between autovacuum runs
autovacuum_vacuum_threshold = 50       # Minimum tuple updates before vacuum
autovacuum_vacuum_insert_threshold = 1000  # Minimum inserts before vacuum
autovacuum_analyze_threshold = 50      # Minimum tuple updates before analyze
autovacuum_vacuum_scale_factor = 0.1   # Fraction of table size
autovacuum_vacuum_insert_scale_factor = 0.2  # Fraction for inserts
autovacuum_analyze_scale_factor = 0.05 # Fraction for analyze
autovacuum_freeze_max_age = 200000000  # Force vacuum to prevent wraparound
autovacuum_multixact_freeze_max_age = 400000000
autovacuum_vacuum_cost_delay = 2ms     # Vacuum cost delay
autovacuum_vacuum_cost_limit = 200     # Vacuum cost limit

# ===========================================================
# CLIENT CONNECTION DEFAULTS
# ===========================================================

# Statement Behavior
search_path = '"$user", public'        # Schema search path
row_security = on                      # Enable row level security
default_tablespace = ''                # Default tablespace
temp_tablespaces = ''                  # Tablespace for temp objects
default_table_access_method = 'heap'   # Default table access method
check_function_bodies = on             # Check function bodies
default_transaction_isolation = 'read committed'
default_transaction_read_only = off
default_transaction_deferrable = off
session_replication_role = 'origin'
statement_timeout = 300000             # 5 minutes maximum query time
lock_timeout = 60000                   # 1 minute maximum lock wait
idle_in_transaction_session_timeout = 300000  # 5 minutes idle transaction
vacuum_freeze_min_age = 50000000
vacuum_freeze_table_age = 150000000
vacuum_multixact_freeze_min_age = 5000000
vacuum_multixact_freeze_table_age = 150000000
# vacuum_cleanup_index_scale_factor removed in PostgreSQL 14
bytea_output = 'hex'                   # Bytea output format
xmlbinary = 'base64'
xmloption = 'content'
gin_fuzzy_search_limit = 0
gin_pending_list_limit = 4MB

# Locale and Formatting
datestyle = 'iso, mdy'
intervalstyle = 'postgres'
timezone = 'UTC'                       # Use UTC for consistency
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'

# ===========================================================
# LOCK MANAGEMENT
# ===========================================================

deadlock_timeout = 1s                  # Time before checking for deadlock
max_locks_per_transaction = 256        # Maximum locks per transaction
max_pred_locks_per_transaction = 256   # Maximum predicate locks
max_pred_locks_per_relation = -2       # Automatic
max_pred_locks_per_page = 2            # Maximum predicate locks per page

# ===========================================================
# VERSION AND PLATFORM SPECIFIC
# ===========================================================

# Extension Settings
shared_preload_libraries = 'pg_stat_statements'  # Required extensions
# Add more as needed: 'pg_cron,pg_partman,pgaudit'

# Developer Settings (disable in production)
# debug_assertions = off                 # Cannot be changed at runtime
debug_print_parse = off
debug_print_rewritten = off
debug_print_plan = off
debug_pretty_print = on

# ===========================================================
# SECURITY SETTINGS
# ===========================================================

# Row Level Security
row_security = on                      # Enable RLS

# Encryption
ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'  # SSL cipher list
ssl_prefer_server_ciphers = on         # Use server cipher order
ssl_ecdh_curve = 'prime256v1'          # ECDH curve name
ssl_min_protocol_version = 'TLSv1.2'   # Minimum TLS version
ssl_max_protocol_version = ''          # Maximum TLS version (empty = highest)

# ===========================================================
# CUSTOMIZED OPTIONS FOR SMM PANEL
# ===========================================================

# Application-specific settings
max_prepared_transactions = 100        # For distributed transactions
synchronize_seqscans = on              # Synchronize sequential scans
extra_float_digits = 3                 # Extra precision for floats

# Performance tuning for web application
tcp_keepalives_idle = 600              # TCP keepalive idle time
tcp_keepalives_interval = 60           # TCP keepalive interval
tcp_keepalives_count = 10              # TCP keepalive probes

# ===========================================================
# NOTES
# ===========================================================
# 
# 1. This configuration assumes PostgreSQL 15 running in Docker
# 2. Memory settings are based on 8GB container allocation
# 3. Adjust shared_buffers and work_mem based on actual available RAM
# 4. Monitor pg_stat_statements for query performance
# 5. Review logs regularly for slow queries and errors
# 6. Consider enabling SSL for production deployments
# 7. Tune autovacuum settings based on workload
# 8. Use pg_tune or pgtune for additional optimization suggestions