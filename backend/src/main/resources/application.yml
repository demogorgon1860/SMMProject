---
# ===============================
# SMM PANEL APPLICATION CONFIGURATION
# ===============================
# Main configuration file for the Social Media Marketing Panel
# 
# SECURITY NOTICE: All sensitive values are externalized to environment variables
# Ensure the following environment variables are set in production:
# - DB_PASSWORD, REDIS_PASSWORD, JWT_SECRET
# - BINOM_API_KEY, YOUTUBE_API_KEY, CRYPTOMUS_API_KEY, CRYPTOMUS_API_SECRET
# - CRYPTOMUS_WEBHOOK_SECRET, CRYPTOMUS_MERCHANT_ID
#
# For environment-specific overrides, use:
# - application-dev.yml (development)
# - application-stage.yml (staging) 
# - application-prod.yml (production)
# ===============================

# ===============================
# SERVER CONFIGURATION
# ===============================
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: >
      text/html,text/xml,text/plain,text/css,text/javascript,
      application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  tomcat:
    connection-timeout: PT20S
    keep-alive-timeout: PT20S
    max-connections: 8192
    threads:
      max: 200
      min-spare: 10
  error:
    include-message: always
    include-binding-errors: always

# ===============================
# SPRING CONFIGURATION
# ===============================
spring:
  # ===============================
  # DATABASE CONFIGURATION
  # ===============================
  datasource:
    url: >
      jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:smm_panel}
    username: ${DB_USER:smm_admin}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Connection pool sizing - adjust based on your PostgreSQL max_connections
      # Default PostgreSQL max_connections is typically 100-200
      maximum-pool-size: ${DB_MAX_POOL_SIZE:50}      # Max active connections
      minimum-idle: ${DB_MIN_IDLE:10}                # Min idle connections
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}    # 20 seconds
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}        # 10 minutes
      max-lifetime: ${DB_MAX_LIFETIME:1800000}       # 30 minutes
      connection-test-query: SELECT 1               # Health check query
      leak-detection-threshold: ${DB_LEAK_DETECTION_THRESHOLD:60000}  # 60 seconds
  # ===============================
  # DATABASE MIGRATION - USING LIQUIBASE ONLY
  # ===============================
  
  # ===============================
  # LIQUIBASE CONFIGURATION
  # ===============================
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    database-change-log-table: databasechangelog
    database-change-log-lock-table: databasechangeloglock
    enabled: ${LIQUIBASE_SHOULD_RUN:true}
  
  jpa:
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: ${HIBERNATE_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
        use_sql_comments: ${HIBERNATE_SQL_COMMENTS:false}
        
        # ===============================
        # HIBERNATE STATISTICS CONFIGURATION
        # ===============================
        generate_statistics: ${HIBERNATE_STATISTICS:true}
        
        # ===============================
        # JDBC BATCH CONFIGURATION
        # ===============================
        jdbc:
          batch_size: ${HIBERNATE_BATCH_SIZE:25}
          batch_versioned_data: true
          fetch_size: ${HIBERNATE_FETCH_SIZE:50}
          time_zone: UTC
          lob:
            non_contextual_creation: true
        
        # ===============================
        # QUERY OPTIMIZATION
        # ===============================
        order_inserts: true
        order_updates: true
        default_batch_fetch_size: ${HIBERNATE_DEFAULT_BATCH_FETCH_SIZE:16}
        max_fetch_depth: 3
        enable_lazy_load_no_trans: false
        
        # ===============================
        # QUERY PLAN CACHE CONFIGURATION
        # ===============================
        query:
          plan_cache_max_size: ${HIBERNATE_QUERY_PLAN_CACHE_SIZE:2048}
          plan_parameter_metadata_max_size: ${HIBERNATE_QUERY_PLAN_PARAMETER_CACHE_SIZE:128}
          
        # ===============================
        # SECOND LEVEL CACHE CONFIGURATION
        # ===============================
        cache:
          use_second_level_cache: ${HIBERNATE_L2_CACHE_ENABLED:true}
          use_query_cache: ${HIBERNATE_QUERY_CACHE_ENABLED:true}
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
          provider_class: org.ehcache.jsr107.EhcacheCachingProvider
          
        # ===============================
        # CONNECTION AND TRANSACTION
        # ===============================
        connection:
          provider_disables_autocommit: true
          autocommit: false
          isolation: 2  # READ_COMMITTED
          
        # ===============================
        # PERFORMANCE MONITORING
        # ===============================
        session_factory:
          statement_inspector: com.smmpanel.config.HibernateStatementInspector
        
        # ===============================
        # ADDITIONAL OPTIMIZATIONS
        # ===============================
        temp:
          use_jdbc_metadata_defaults: false
        event:
          merge:
            entity_copy_observer: allow
        
    open-in-view: false

  # ===============================
  # REDIS CONFIGURATION
  # ===============================
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 5000ms
      # Using Lettuce client instead of Jedis for better performance
      lettuce:
        pool:
          enabled: true
          max-active: 50
          max-idle: 20
          min-idle: 5
          max-wait: 2000ms
          time-between-eviction-runs: 30s
        cluster:
          refresh:
            adaptive: true
            period: 30s
        shutdown-timeout: 2000ms
  cache:
    type: redis
    redis:
      time-to-live: 300000
      key-prefix: "smm:cache:"
      use-key-prefix: true
      cache-null-values: false

  # ===============================
  # KAFKA CONFIGURATION
  # ===============================
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: >
        org.apache.kafka.common.serialization.StringSerializer
      value-serializer: >
        org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      transaction-id-prefix: smm-panel-tx-
      properties:
        enable.idempotence: "true"
        compression.type: snappy
        delivery.timeout.ms: 120000
        request.timeout.ms: 30000
        max.in.flight.requests.per.connection: 5
        spring.json.type.mapping: >
          order:com.smmpanel.entity.Order,
          videoProcessing:com.smmpanel.entity.VideoProcessing,
          offerAssignment:com.smmpanel.dto.binom.OfferAssignmentRequest,
          offerAssignmentEvent:com.smmpanel.event.OfferAssignmentEvent,
          notification:java.util.Map,
          orderStateUpdate:java.util.Map
    consumer:
      key-deserializer: >
        org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: >
        org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: smm-panel-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      isolation-level: read-committed
      max-poll-records: 500
      fetch-min-bytes: 1
      fetch-max-wait-ms: 500
      session-timeout-ms: 30000
      heartbeat-interval-ms: 3000
      max-poll-interval-ms: 300000
      properties:
        spring.deserializer.value.delegate.class: >
          org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: >
          com.smmpanel.entity,com.smmpanel.dto,com.smmpanel.event,java.util
        spring.json.type.mapping: >
          order:com.smmpanel.entity.Order,
          videoProcessing:com.smmpanel.entity.VideoProcessing,
          offerAssignment:com.smmpanel.dto.binom.OfferAssignmentRequest,
          offerAssignmentEvent:com.smmpanel.event.OfferAssignmentEvent,
          notification:java.util.Map,
          orderStateUpdate:java.util.Map
        spring.json.use.type.headers: false
        spring.json.value.default.type: java.util.Map
    listener:
      concurrency: 3
      type: batch
      poll-timeout: 3000
    retry-topic:
      attempts: 3
      delay: 1000
      multiplier: 2.0
      max-delay: 10000
        
  # ===============================
  # KAFKA MONITORING CONFIGURATION  
  # ===============================
  kafka-monitoring:
    lag:
      threshold: ${KAFKA_LAG_THRESHOLD:10000}
    error:
      threshold: ${KAFKA_ERROR_THRESHOLD:0.05}
    dead-letter-queue:
      topic: ${KAFKA_DLQ_TOPIC:video.processing.dlq}

  # ===============================
  # FILE UPLOAD CONFIGURATION
  # ===============================
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
      file-size-threshold: 1MB

  # ===============================
  # ASYNC PROCESSING CONFIGURATION
  # ===============================
  task:
    execution:
      pool:
        core-size: 8
        max-size: 20
        queue-capacity: 1000
      thread-name-prefix: sms-async-
    scheduling:
      pool:
        size: 5
      thread-name-prefix: sms-scheduled-

# ===============================
# APPLICATION CONFIGURATION
# ===============================
app:
  # ===============================
  # DATABASE POOL CONFIGURATION (MOVED TO DATASOURCE.HIKARI SECTION)
  # ===============================

  # ===============================
  # SECURITY CONFIGURATION
  # ===============================
  jwt:
    secret: ${JWT_SECRET}
    expiration-ms: ${JWT_EXPIRATION_MS:86400000}
    refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000}
  security:
    api-key:
      enabled: true
      header: X-API-Key
      hash-algorithm: SHA-256
      global-salt: ${API_KEY_GLOBAL_SALT:smm-panel-secure-salt-2024}
  cors:
    allowed-origins: >
      ${CORS_ORIGINS:http://localhost:3000,https://demo.perfectpanel.com}
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  # ===============================
  # RATE LIMITING CONFIGURATION
  # ===============================
  rate-limit:
    enabled: true
    orders:
      per-minute: 10
      per-hour: 100
    api:
      per-minute: 60
      per-hour: 1000
    auth:
      per-minute: 5

  # ===============================
  # EXTERNAL API CONFIGURATIONS
  # ===============================
  binom:
    api:
      # Binom V2 API Configuration
      url: ${BINOM_API_URL}
      key: ${BINOM_API_KEY}
      timeout: ${BINOM_API_TIMEOUT:30000}
      retry-attempts: ${BINOM_RETRY_ATTEMPTS:3}
      # V2 specific endpoints
      version: ${BINOM_API_VERSION:v2}
      endpoints:
        campaigns: ${BINOM_CAMPAIGNS_ENDPOINT:/v2/campaigns}
        offers: ${BINOM_OFFERS_ENDPOINT:/v2/offers}
        clicks: ${BINOM_CLICKS_ENDPOINT:/v2/clicks}
        conversions: ${BINOM_CONVERSIONS_ENDPOINT:/v2/conversions}
        statistics: ${BINOM_STATISTICS_ENDPOINT:/v2/statistics}
        landing-pages: ${BINOM_LANDING_PAGES_ENDPOINT:/v2/landing-pages}
        traffic-sources: ${BINOM_TRAFFIC_SOURCES_ENDPOINT:/v2/traffic-sources}
      # Enhanced authentication for V2
      auth:
        method: ${BINOM_AUTH_METHOD:api-key} # api-key, oauth2, bearer
        header: ${BINOM_AUTH_HEADER:X-API-Key}
        bearer-token: ${BINOM_BEARER_TOKEN:}
        oauth2:
          client-id: ${BINOM_OAUTH2_CLIENT_ID:}
          client-secret: ${BINOM_OAUTH2_CLIENT_SECRET:}
          token-url: ${BINOM_OAUTH2_TOKEN_URL:}
    # Business logic configuration
    default-coefficient: ${BINOM_DEFAULT_COEFFICIENT:3.0}
    max-campaigns-per-order: ${BINOM_MAX_CAMPAIGNS_PER_ORDER:5}
    # V2 Performance and monitoring
    monitoring:
      enabled: ${BINOM_MONITORING_ENABLED:true}
      metrics-interval: ${BINOM_METRICS_INTERVAL:300000} # 5 minutes
      health-check-interval: ${BINOM_HEALTH_CHECK_INTERVAL:60000} # 1 minute
      alert-thresholds:
        response-time-ms: ${BINOM_ALERT_RESPONSE_TIME:5000}
        error-rate-percent: ${BINOM_ALERT_ERROR_RATE:5.0}
        failure-rate-percent: ${BINOM_ALERT_FAILURE_RATE:10.0}
    # V2 Rate limiting and throttling
    rate-limiting:
      enabled: ${BINOM_RATE_LIMITING_ENABLED:true}
      requests-per-minute: ${BINOM_REQUESTS_PER_MINUTE:120}
      requests-per-hour: ${BINOM_REQUESTS_PER_HOUR:1000}
      burst-capacity: ${BINOM_BURST_CAPACITY:20}
    # V2 Caching configuration
    cache:
      enabled: ${BINOM_CACHE_ENABLED:true}
      campaigns-ttl: ${BINOM_CACHE_CAMPAIGNS_TTL:1800} # 30 minutes
      offers-ttl: ${BINOM_CACHE_OFFERS_TTL:3600} # 1 hour
      statistics-ttl: ${BINOM_CACHE_STATISTICS_TTL:300} # 5 minutes
      landing-pages-ttl: ${BINOM_CACHE_LANDING_PAGES_TTL:7200} # 2 hours
  youtube:
    api:
      key: ${YOUTUBE_API_KEY}
      timeout: 15000
      retry-attempts: 2
    quota:
      daily-limit: 10000
      per-100-seconds: 100
  cryptomus:
    api:
      url: ${CRYPTOMUS_API_URL:https://api.cryptomus.com/v1}
      key: ${CRYPTOMUS_API_KEY}
      secret: ${CRYPTOMUS_API_SECRET}
    webhook:
      secret: ${CRYPTOMUS_WEBHOOK_SECRET}
    merchant-id: ${CRYPTOMUS_MERCHANT_ID}
    min-deposit: ${CRYPTOMUS_MIN_DEPOSIT:5.00}
    timeout: 30000
  selenium:
    driver:
      path: ${SELENIUM_DRIVER_PATH:/usr/local/bin/chromedriver}
    headless: "true"
    timeout:
      page-load: 30
      implicit: 10
    max-concurrent-sessions: 5
    hub:
      url: "http://localhost:4444/wd/hub"

  # ===============================
  # CACHING CONFIGURATION
  # ===============================
  cache:
    # Cache TTL values in seconds - standardized across environments
    services:
      ttl: ${CACHE_SERVICES_TTL:3600}      # 1 hour - service data changes infrequently
    users:
      ttl: ${CACHE_USERS_TTL:1800}         # 30 minutes - user data moderately dynamic
    conversion-coefficients:
      ttl: ${CACHE_COEFFICIENTS_TTL:7200}  # 2 hours - coefficients change rarely
    youtube-stats:
      ttl: ${CACHE_YOUTUBE_TTL:600}        # 10 minutes - stats need regular updates

  # ===============================
  # FILE UPLOAD & PROCESSING
  # ===============================
  file:
    upload:
      path: ${FILE_UPLOAD_PATH:/tmp/smm-panel/uploads}
    processing:
      timeout: 300
      max-concurrent: 3

  # ===============================
  # ERROR HANDLING CONFIGURATION
  # ===============================
  error:
    include-stack-trace: ${ERROR_INCLUDE_STACK_TRACE:false}
    include-debug-info: ${ERROR_INCLUDE_DEBUG_INFO:false}

  # ===============================
  # BUSINESS LOGIC CONFIGURATION
  # ===============================
  order:
    processing:
      batch-size: 100
      max-retries: 3
      retry-delay: 5000
      timeout: 300000
  video:
    processing:
      max-concurrent: 5
      timeout: 600000
      clip-length: 60
      quality: medium
  balance:
    minimum-deposit: 1.00
    maximum-deposit: 10000.00
    transaction-timeout: 300000
    retry:
      max-attempts: 5
      initial-delay: 100
      max-delay: 5000
      multiplier: 2.0
  
  # ===============================
  # TRANSACTION MANAGEMENT
  # ===============================
  transaction:
    monitoring:
      enabled: ${TRANSACTION_MONITORING_ENABLED:false}
    trace:
      enabled: ${TRANSACTION_TRACE_ENABLED:false}
    isolation:
      balance-operations: SERIALIZABLE
      order-operations: REPEATABLE_READ
      read-operations: READ_COMMITTED
    timeout:
      balance-operations: 10
      order-operations: 30
      read-operations: 15
      default: 30
  perfectpanel:
    compatible: "true"
    api-version: "2.0"
    status-mapping:
      enabled: "true"

  # ===============================
  # DEVELOPMENT/DEBUG SETTINGS
  # ===============================
  features:
    youtube-processing:
      enabled: ${YOUTUBE_PROCESSING_ENABLED:true}
    binom-integration:
      enabled: ${BINOM_INTEGRATION_ENABLED:true}
    payment-processing:
      enabled: ${PAYMENT_PROCESSING_ENABLED:true}
    email-notifications:
      enabled: ${EMAIL_NOTIFICATIONS_ENABLED:true}
  monitoring:
    enabled: true
    slow-query-threshold: 1000
    memory-threshold: 80
    cpu-threshold: 80
    query-count:
      enabled: ${QUERY_COUNT_MONITORING_ENABLED:false}
      warn-threshold: 5
      error-threshold: 10
    connection-pool:
      high-usage-threshold: ${CONNECTION_POOL_HIGH_USAGE_THRESHOLD:75}
      critical-usage-threshold: ${CONNECTION_POOL_CRITICAL_USAGE_THRESHOLD:90}
      slow-query-threshold: ${CONNECTION_POOL_SLOW_QUERY_THRESHOLD:5000}
      
  # ===============================
  # ADDITIONAL SERVICE CONFIGURATION
  # ===============================
  currency:
    default: ${DEFAULT_CURRENCY:USD}
    exchange-rate-api:
      url: ${EXCHANGE_RATE_API_URL:https://api.exchangerate.host/latest}
      base-currency: ${EXCHANGE_RATE_BASE_CURRENCY:USD}
      timeout-ms: ${EXCHANGE_RATE_API_TIMEOUT_MS:5000}
      
  email:
    enabled: ${EMAIL_ENABLED:false}
    from: ${EMAIL_FROM:noreply@smmpanel.com}
    
  error-recovery:
    max-retries: ${ERROR_RECOVERY_MAX_RETRIES:3}
    initial-delay-minutes: ${ERROR_RECOVERY_INITIAL_DELAY_MINUTES:5}
    max-delay-hours: ${ERROR_RECOVERY_MAX_DELAY_HOURS:24}
    backoff-multiplier: ${ERROR_RECOVERY_BACKOFF_MULTIPLIER:2.0}
    
  dead-letter-queue:
    retention-days: ${DLQ_RETENTION_DAYS:30}
    max-entries: ${DLQ_MAX_ENTRIES:10000}

# ===============================
# RESILIENCE4J CONFIGURATION
# ===============================
resilience4j:
  circuitbreaker:
    instances:
      # Binom V2 API Circuit Breaker - Enhanced configuration
      binom-api:
        failure-rate-threshold: ${BINOM_CB_FAILURE_RATE_THRESHOLD:45}
        slow-call-rate-threshold: ${BINOM_CB_SLOW_CALL_RATE_THRESHOLD:40}
        slow-call-duration-threshold: ${BINOM_CB_SLOW_CALL_DURATION:PT8S}
        wait-duration-in-open-state: ${BINOM_CB_WAIT_DURATION_OPEN:PT45S}
        minimum-number-of-calls: ${BINOM_CB_MIN_CALLS:15}
        sliding-window-size: ${BINOM_CB_SLIDING_WINDOW_SIZE:30}
        sliding-window-type: ${BINOM_CB_SLIDING_WINDOW_TYPE:COUNT_BASED}
        permitted-number-of-calls-in-half-open-state: ${BINOM_CB_HALF_OPEN_CALLS:5}
        max-wait-duration-in-half-open-state: ${BINOM_CB_MAX_WAIT_HALF_OPEN:PT15S}
        automatic-transition-from-open-to-half-open-enabled: true
        # V2 specific configurations
        record-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
          - com.smmpanel.exception.BinomApiException
        ignore-exceptions:
          - com.smmpanel.exception.BinomAuthenticationException
          - java.lang.IllegalArgumentException
      # Binom V2 specific endpoints circuit breakers
      binom-campaigns:
        failure-rate-threshold: 40
        slow-call-rate-threshold: 35
        slow-call-duration-threshold: PT6S
        wait-duration-in-open-state: PT30S
        minimum-number-of-calls: 10
        sliding-window-size: 20
      binom-statistics:
        failure-rate-threshold: 50
        slow-call-rate-threshold: 45
        slow-call-duration-threshold: PT10S
        wait-duration-in-open-state: PT60S
        minimum-number-of-calls: 8
        sliding-window-size: 15
      youtube-api:
        failure-rate-threshold: 60
        slow-call-duration-threshold: PT10S
        wait-duration-in-open-state: PT2M
      payment-api:
        failure-rate-threshold: 40
        slow-call-duration-threshold: PT8S
        wait-duration-in-open-state: PT1M
  retry:
    instances:
      # Binom V2 API Retry - Enhanced configuration
      binom-api:
        max-attempts: ${BINOM_RETRY_MAX_ATTEMPTS:4}
        wait-duration: ${BINOM_RETRY_WAIT_DURATION:PT2S}
        exponential-backoff-multiplier: ${BINOM_RETRY_BACKOFF_MULTIPLIER:1.8}
        max-retry-attempts: ${BINOM_RETRY_MAX_RETRY_ATTEMPTS:4}
        # V2 specific retry configurations
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
          - com.smmpanel.exception.BinomTemporaryException
        ignore-exceptions:
          - com.smmpanel.exception.BinomAuthenticationException
          - com.smmpanel.exception.BinomValidationException
          - java.lang.IllegalArgumentException
      # Binom V2 endpoint-specific retry policies
      binom-campaigns:
        max-attempts: 3
        wait-duration: PT1S
        exponential-backoff-multiplier: 2.0
      binom-statistics:
        max-attempts: 2
        wait-duration: PT3S
        exponential-backoff-multiplier: 1.5
      youtube-api:
        max-attempts: 2
        wait-duration: PT2S
      payment-api:
        max-attempts: 2
        wait-duration: PT3S
  # Binom V2 Bulkhead configuration
  bulkhead:
    instances:
      binom-api:
        max-concurrent-calls: ${BINOM_BULKHEAD_MAX_CALLS:25}
        max-wait-duration: ${BINOM_BULKHEAD_MAX_WAIT:PT10S}
      binom-campaigns:
        max-concurrent-calls: 15
        max-wait-duration: PT8S
      binom-statistics:
        max-concurrent-calls: 10
        max-wait-duration: PT12S
  # Binom V2 Rate Limiter configuration
  ratelimiter:
    instances:
      binom-api:
        limit-for-period: ${BINOM_RATE_LIMIT_PERIOD:30}
        limit-refresh-period: ${BINOM_RATE_LIMIT_REFRESH:PT1M}
        timeout-duration: ${BINOM_RATE_LIMIT_TIMEOUT:PT5S}
      binom-campaigns:
        limit-for-period: 20
        limit-refresh-period: PT1M
        timeout-duration: PT3S
      binom-statistics:
        limit-for-period: 15
        limit-refresh-period: PT1M
        timeout-duration: PT8S

# ===============================
# MONITORING & OBSERVABILITY
# ===============================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,kafka
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
    kafka:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  health:
    livenessstate:
      enabled: "true"
    readinessstate:
      enabled: "true"
    db:
      enabled: "true"
    redis:
      enabled: "true"
    kafka:
      enabled: "true"

# ===============================
# APPLICATION INFO
# ===============================
info:
  app:
    name: SMM Panel
    version: "@project.version@"
    description: Social Media Marketing Panel
    encoding: "@project.build.sourceEncoding@"
    java:
      version: "@java.version@"

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging:
  level:
    root: INFO
    com.smmpanel: DEBUG
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: >
      "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: >
      "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:/var/log/smm-panel/application.log}
  logback:
    rollingpolicy:
      max-file-size: 100MB
      total-size-cap: 1GB
      max-history: 30
