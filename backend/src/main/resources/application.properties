# SMM Panel Production Configuration
# Environment: Production
# Version: 1.0.0

# ===============================
# SERVER CONFIGURATION
# ===============================
server.port=8080
server.servlet.context-path=/api
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.http2.enabled=true

# Connection timeout and thread pool
server.tomcat.connection-timeout=20s
server.tomcat.keep-alive-timeout=20s
server.tomcat.max-connections=8192
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10

# ===============================
# DATABASE CONFIGURATION
# ===============================
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:smm_panel}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool (PERFORMANCE OPTIMIZED)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.pool-name=SmmPanelHikariCP
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=true

# ===============================
# REDIS CONFIGURATION
# ===============================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=0
spring.data.redis.timeout=5000ms

# Redis Connection Pool
spring.data.redis.jedis.pool.enabled=true
spring.data.redis.jedis.pool.max-active=50
spring.data.redis.jedis.pool.max-idle=20
spring.data.redis.jedis.pool.min-idle=5
spring.data.redis.jedis.pool.max-wait=2000ms

# ===============================
# KAFKA CONFIGURATION
# ===============================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=smm-panel-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=com.smmpanel.event

# ===============================
# SECURITY CONFIGURATION
# ===============================
# JWT Settings (PRODUCTION SECURITY)
app.jwt.secret=${JWT_SECRET:your-super-secret-jwt-key-change-in-production}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}
app.jwt.refresh-expiration-ms=${JWT_REFRESH_EXPIRATION_MS:604800000}

# API Key Security
app.security.api-key.enabled=true
app.security.api-key.header=X-API-Key
app.security.api-key.hash-algorithm=SHA-256

# CORS Configuration
app.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,https://demo.perfectpanel.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# ===============================
# RATE LIMITING CONFIGURATION
# ===============================
app.rate-limit.enabled=true
app.rate-limit.orders.per-minute=10
app.rate-limit.orders.per-hour=100
app.rate-limit.api.per-minute=60
app.rate-limit.api.per-hour=1000
app.rate-limit.auth.per-minute=5

# ===============================
# EXTERNAL API CONFIGURATIONS
# ===============================

# Binom Tracker API
app.binom.api.url=${BINOM_API_URL:https://your-binom-domain.com/api}
app.binom.api.key=${BINOM_API_KEY:your-binom-api-key}
app.binom.api.timeout=30000
app.binom.api.retry-attempts=3
app.binom.default-coefficient=3.0
app.binom.max-campaigns-per-order=5

# YouTube API
app.youtube.api.key=${YOUTUBE_API_KEY:your-youtube-api-key}
app.youtube.api.timeout=15000
app.youtube.api.retry-attempts=2
app.youtube.quota.daily-limit=10000
app.youtube.quota.per-100-seconds=100

# Cryptomus Payment API
app.cryptomus.api.url=${CRYPTOMUS_API_URL:https://api.cryptomus.com/v1}
app.cryptomus.api.key=${CRYPTOMUS_API_KEY:your-cryptomus-api-key}
app.cryptomus.api.secret=${CRYPTOMUS_API_SECRET:your-cryptomus-api-secret}
app.cryptomus.webhook.secret=${CRYPTOMUS_WEBHOOK_SECRET:your-webhook-secret}
app.cryptomus.timeout=30000

# Selenium Configuration
app.selenium.driver.path=${SELENIUM_DRIVER_PATH:/usr/local/bin/chromedriver}
app.selenium.headless=true
app.selenium.timeout.page-load=30
app.selenium.timeout.implicit=10
app.selenium.max-concurrent-sessions=5

# ===============================
# RESILIENCE4J CONFIGURATION
# ===============================
# Circuit Breakers
resilience4j.circuitbreaker.instances.binom-api.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.binom-api.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.binom-api.slow-call-duration-threshold=5s
resilience4j.circuitbreaker.instances.binom-api.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.binom-api.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.binom-api.sliding-window-size=20

resilience4j.circuitbreaker.instances.youtube-api.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.youtube-api.slow-call-duration-threshold=10s
resilience4j.circuitbreaker.instances.youtube-api.wait-duration-in-open-state=2m

resilience4j.circuitbreaker.instances.payment-api.failure-rate-threshold=40
resilience4j.circuitbreaker.instances.payment-api.slow-call-duration-threshold=8s
resilience4j.circuitbreaker.instances.payment-api.wait-duration-in-open-state=1m

# Retry Configuration
resilience4j.retry.instances.binom-api.max-attempts=3
resilience4j.retry.instances.binom-api.wait-duration=1s
resilience4j.retry.instances.binom-api.exponential-backoff-multiplier=2

resilience4j.retry.instances.youtube-api.max-attempts=2
resilience4j.retry.instances.youtube-api.wait-duration=2s

resilience4j.retry.instances.payment-api.max-attempts=2
resilience4j.retry.instances.payment-api.wait-duration=3s

# ===============================
# MONITORING & OBSERVABILITY
# ===============================
# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoints.web.base-path=/actuator
management.metrics.export.prometheus.enabled=true

# Health Checks
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.kafka.enabled=true

# Application Info
info.app.name=SMM Panel
info.app.version=@project.version@
info.app.description=Social Media Marketing Panel
info.app.encoding=@project.build.sourceEncoding@
info.java.version=@java.version@

# ===============================
# CACHING CONFIGURATION
# ===============================
spring.cache.type=redis
spring.cache.redis.time-to-live=300000
spring.cache.redis.key-prefix=smm:cache:
spring.cache.redis.use-key-prefix=true
spring.cache.redis.cache-null-values=false

# Cache Names
app.cache.services.ttl=3600
app.cache.users.ttl=1800
app.cache.conversion-coefficients.ttl=7200
app.cache.youtube-stats.ttl=300

# ===============================
# FILE UPLOAD & PROCESSING
# ===============================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=1MB

app.file.upload.path=${FILE_UPLOAD_PATH:/tmp/smm-panel/uploads}
app.file.processing.timeout=300
app.file.processing.max-concurrent=3

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.root=INFO
logging.level.com.smmpanel=DEBUG
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Logback configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log file settings
logging.file.name=${LOG_FILE_PATH:/var/log/smm-panel/application.log}
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.total-size-cap=1GB
logging.logback.rollingpolicy.max-history=30

# ===============================
# ERROR HANDLING CONFIGURATION
# ===============================
app.error.include-stack-trace=${ERROR_INCLUDE_STACK_TRACE:false}
app.error.include-debug-info=${ERROR_INCLUDE_DEBUG_INFO:false}
server.error.include-message=always
server.error.include-binding-errors=always

# ===============================
# ASYNC PROCESSING CONFIGURATION
# ===============================
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=1000
spring.task.execution.thread-name-prefix=smm-async-

spring.task.scheduling.pool.size=5
spring.task.scheduling.thread-name-prefix=smm-scheduled-

# ===============================
# BUSINESS LOGIC CONFIGURATION
# ===============================
# Order Processing
app.order.processing.batch-size=100
app.order.processing.max-retries=3
app.order.processing.retry-delay=5000
app.order.processing.timeout=300000

# Video Processing
app.video.processing.max-concurrent=5
app.video.processing.timeout=600000
app.video.processing.clip-length=60
app.video.processing.quality=medium

# Balance Management
app.balance.minimum-deposit=1.00
app.balance.maximum-deposit=10000.00
app.balance.transaction-timeout=300000

# Perfect Panel Compatibility
app.perfectpanel.compatible=true
app.perfectpanel.api-version=2.0
app.perfectpanel.status-mapping.enabled=true

# ===============================
# DEVELOPMENT/DEBUG SETTINGS
# ===============================
spring.jpa.properties.hibernate.show_sql=${DEBUG_SQL:false}
spring.jpa.properties.hibernate.format_sql=${DEBUG_SQL:false}
spring.jpa.properties.hibernate.use_sql_comments=${DEBUG_SQL:false}

# Enable/disable features for testing
app.features.youtube-processing.enabled=${YOUTUBE_PROCESSING_ENABLED:true}
app.features.binom-integration.enabled=${BINOM_INTEGRATION_ENABLED:true}
app.features.payment-processing.enabled=${PAYMENT_PROCESSING_ENABLED:true}
app.features.email-notifications.enabled=${EMAIL_NOTIFICATIONS_ENABLED:true}

# Performance monitoring
app.monitoring.enabled=true
app.monitoring.slow-query-threshold=1000
app.monitoring.memory-threshold=80
app.monitoring.cpu-threshold=80
