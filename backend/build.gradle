plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '9.22.3'
}

// Apply performance testing configuration
apply from: 'gradle/performance-testing.gradle'

group = 'com.smmpanel'
version = '1.0.0'
sourceCompatibility = '17'
targetCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Retry and Circuit Breaker
    implementation 'org.springframework.retry:spring-retry'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.1.0'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis'
    implementation 'org.apache.commons:commons-pool2'
    
    // Rate limiting
    implementation 'com.bucket4j:bucket4j-core:8.7.0'
    implementation 'com.bucket4j:bucket4j-redis:8.7.0'
    implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.data:spring-data-jpa'
    
    // Hibernate Second Level Cache (EhCache)
    implementation 'org.hibernate:hibernate-jcache:6.4.1.Final'
    implementation 'org.ehcache:ehcache:3.10.8'
    implementation 'org.ehcache:jcache:1.0.1'
    
    // Jakarta EE APIs for Spring Boot 3.x compatibility
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    
    // JWT - FIXED VERSION
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    
    // Spring Security
    implementation 'org.springframework.security:spring-security-core'
    
    // YouTube API
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20231011-2.0.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'
    
    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-support:4.15.0'
    
    // HTTP Client
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // LOMBOK - CRITICAL FIX FOR ANNOTATION PROCESSING
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.h2database:h2'
}

// CRITICAL: Configure annotation processing properly
compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

compileTestJava {
    options.annotationProcessorPath = configurations.testAnnotationProcessor
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

jar {
    enabled = false
}