<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog 
                        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.20.xsd">

    <!-- 
    v1.2.0 - Development Test Data
    
    This migration provides test data and development utilities for local development.
    It includes sample users, services, and orders for testing purposes.
    
    Context: dev (development environment only)
    Rollback: Full rollback support - removes all test data
    -->

    <changeSet id="1.2.0-create-dev-test-users" author="dev-team" context="dev">
        <comment>Create test users for development environment</comment>
        
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="users"/>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM users WHERE username LIKE 'test_%';
            </sqlCheck>
        </preConditions>

        <insert tableName="users">
            <column name="username" value="test_admin"/>
            <column name="email" value="admin@test.smmpanel.local"/>
            <column name="password_hash" value="$2a$10$example.test.hash.for.dev"/>
            <column name="role" value="ADMIN"/>
            <column name="is_active" valueBoolean="true"/>
            <column name="balance" value="1000.00"/>
            <column name="preferred_currency" value="USD"/>
            <column name="created_at" valueComputed="NOW()"/>
        </insert>

        <insert tableName="users">
            <column name="username" value="test_user1"/>
            <column name="email" value="user1@test.smmpanel.local"/>
            <column name="password_hash" value="$2a$10$example.test.hash.for.dev"/>
            <column name="role" value="USER"/>
            <column name="is_active" valueBoolean="true"/>
            <column name="balance" value="100.00"/>
            <column name="preferred_currency" value="USD"/>
            <column name="created_at" valueComputed="NOW()"/>
        </insert>

        <insert tableName="users">
            <column name="username" value="test_user2"/>
            <column name="email" value="user2@test.smmpanel.local"/>
            <column name="password_hash" value="$2a$10$example.test.hash.for.dev"/>
            <column name="role" value="USER"/>
            <column name="is_active" valueBoolean="true"/>
            <column name="balance" value="50.00"/>
            <column name="preferred_currency" value="EUR"/>
            <column name="created_at" valueComputed="NOW()"/>
        </insert>

        <rollback>
            <delete tableName="users">
                <where>username LIKE 'test_%'</where>
            </delete>
        </rollback>
    </changeSet>

    <changeSet id="1.2.0-create-dev-test-services" author="dev-team" context="dev">
        <comment>Create test services for development environment</comment>
        
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="services"/>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM services WHERE name LIKE 'Test %';
            </sqlCheck>
        </preConditions>

        <insert tableName="services">
            <column name="name" value="Test YouTube Views"/>
            <column name="category" value="youtube"/>
            <column name="rate" value="0.50"/>
            <column name="min_order" value="100"/>
            <column name="max_order" value="10000"/>
            <column name="active" valueBoolean="true"/>
            <column name="geo_targeting" value="US"/>
            <column name="description" value="Test service for YouTube views"/>
        </insert>

        <insert tableName="services">
            <column name="name" value="Test YouTube Subscribers"/>
            <column name="category" value="youtube"/>
            <column name="rate" value="2.00"/>
            <column name="min_order" value="10"/>
            <column name="max_order" value="1000"/>
            <column name="active" valueBoolean="true"/>
            <column name="geo_targeting" value="US"/>
            <column name="description" value="Test service for YouTube subscribers"/>
        </insert>

        <rollback>
            <delete tableName="services">
                <where>name LIKE 'Test %'</where>
            </delete>
        </rollback>
    </changeSet>

    <changeSet id="1.2.0-create-dev-test-youtube-accounts" author="dev-team" context="dev">
        <comment>Create test YouTube accounts for development environment</comment>
        
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="youtube_accounts"/>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM youtube_accounts WHERE account_name LIKE 'test_%';
            </sqlCheck>
        </preConditions>

        <insert tableName="youtube_accounts">
            <column name="account_name" value="test_account_1"/>
            <column name="channel_id" value="UCTestChannel1234567890"/>
            <column name="status" value="ACTIVE"/>
            <column name="daily_clips_count" value="0"/>
            <column name="daily_limit" value="10"/>
            <column name="last_clip_date" valueComputed="CURRENT_DATE - INTERVAL '1 day'"/>
            <column name="created_at" valueComputed="NOW()"/>
        </insert>

        <insert tableName="youtube_accounts">
            <column name="account_name" value="test_account_2"/>
            <column name="channel_id" value="UCTestChannel0987654321"/>
            <column name="status" value="AVAILABLE"/>
            <column name="daily_clips_count" value="3"/>
            <column name="daily_limit" value="15"/>
            <column name="last_clip_date" valueComputed="CURRENT_DATE"/>
            <column name="created_at" valueComputed="NOW()"/>
        </insert>

        <rollback>
            <delete tableName="youtube_accounts">
                <where>account_name LIKE 'test_%'</where>
            </delete>
        </rollback>
    </changeSet>

    <changeSet id="1.2.0-create-dev-monitoring-views" author="dev-team" context="dev">
        <comment>Create development monitoring views for testing and debugging</comment>
        
        <createView viewName="v_dev_order_summary" replaceIfExists="true">
            <![CDATA[
            SELECT 
                o.status,
                COUNT(*) as order_count,
                AVG(o.quantity) as avg_quantity,
                SUM(o.charge) as total_charge,
                MIN(o.created_at) as oldest_order,
                MAX(o.created_at) as newest_order
            FROM orders o
            WHERE o.created_at >= CURRENT_DATE - INTERVAL '7 days'
            GROUP BY o.status
            ORDER BY order_count DESC
            ]]>
        </createView>

        <createView viewName="v_dev_user_activity" replaceIfExists="true">
            <![CDATA[
            SELECT 
                u.username,
                u.balance,
                COUNT(o.id) as total_orders,
                SUM(o.charge) as total_spent,
                MAX(o.created_at) as last_order_date,
                COUNT(CASE WHEN o.status = 'COMPLETED' THEN 1 END) as completed_orders,
                COUNT(CASE WHEN o.status = 'PENDING' THEN 1 END) as pending_orders
            FROM users u
            LEFT JOIN orders o ON u.id = o.user_id
            WHERE u.username LIKE 'test_%'
            GROUP BY u.id, u.username, u.balance
            ORDER BY total_orders DESC
            ]]>
        </createView>

        <createView viewName="v_dev_performance_metrics" replaceIfExists="true">
            <![CDATA[
            SELECT 
                'orders' as table_name,
                COUNT(*) as total_rows,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '1 day' THEN 1 END) as last_24h,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '7 days' THEN 1 END) as last_7d
            FROM orders
            UNION ALL
            SELECT 
                'video_processing' as table_name,
                COUNT(*) as total_rows,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '1 day' THEN 1 END) as last_24h,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '7 days' THEN 1 END) as last_7d
            FROM video_processing
            UNION ALL
            SELECT 
                'balance_transactions' as table_name,
                COUNT(*) as total_rows,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '1 day' THEN 1 END) as last_24h,
                COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '7 days' THEN 1 END) as last_7d
            FROM balance_transactions
            ]]>
        </createView>

        <rollback>
            <dropView viewName="v_dev_order_summary"/>
            <dropView viewName="v_dev_user_activity"/>
            <dropView viewName="v_dev_performance_metrics"/>
        </rollback>
    </changeSet>

    <changeSet id="1.2.0-record-migration-metadata" author="dev-team" context="dev">
        <comment>Record migration execution metadata</comment>
        
        <insert tableName="liquibase_migration_metadata">
            <column name="changeset_id" value="1.2.0-dev-test-data"/>
            <column name="version" value="1.2.0"/>
            <column name="context" value="dev"/>
            <column name="rollback_available" valueBoolean="true"/>
            <column name="notes" value="Added development test data: 3 users, 2 services, 2 YouTube accounts, and 3 monitoring views"/>
        </insert>

        <rollback>
            <delete tableName="liquibase_migration_metadata">
                <where>changeset_id = '1.2.0-dev-test-data'</where>
            </delete>
        </rollback>
    </changeSet>

</databaseChangeLog>